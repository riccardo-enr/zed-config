// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  // Standard editor keybindings (work in all modes)
  {
    "context": "Editor && !menu",
    "bindings": {
      "ctrl-s": "workspace::Save",
      "ctrl-shift-s": "workspace::SaveAll",
      "ctrl-f": "buffer_search::Deploy",
      "ctrl-shift-f": "workspace::NewSearch",
      "ctrl-/": "editor::ToggleComments",
      "ctrl-p": "file_finder::Toggle",
      "ctrl-shift-p": "command_palette::Toggle",
      "ctrl-b": "workspace::ToggleLeftDock",
      "ctrl-j": "workspace::ToggleBottomDock",
      "ctrl-`": "terminal_panel::ToggleFocus"
    }
  },

  // Copy/paste/cut (if you want standard behavior)
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "ctrl-c": "editor::Copy",
      "ctrl-v": "editor::Paste",
      "ctrl-x": "editor::Cut"
    }
  },

  // Vim mode enhancements
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore"
    }
  },
  {
    "context": "vim_mode == normal && !menu",
    "bindings": {
      "space f": "file_finder::Toggle",
      "space e": "project_panel::ToggleFocus",
      "space b": "tab_switcher::Toggle",
      "space /": "workspace::NewSearch",
      "g d": "editor::GoToDefinition",
      "g r": "editor::FindAllReferences",
      "space c a": "editor::ToggleCodeActions",
      "space x": "diagnostics::Deploy"
    }
  },

  // Pane navigation (works in all contexts)
  {
    "context": "VimControl && !menu",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp"
    }
  },

  // Project panel navigation
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste"
    }
  },

  // Dock/Panel toggles (work in all modes)
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-b": "workspace::ToggleLeftDock", // Toggle project panel
      "ctrl-j": "workspace::ToggleBottomDock", // Toggle terminal/bottom panel
      "ctrl-\\": "workspace::ToggleRightDock", // Toggle right panel (outline, diagnostics)
      "ctrl-shift-e": "project_panel::ToggleFocus", // Focus project panel
      "ctrl-`": "terminal_panel::ToggleFocus" // Focus terminal
    }
  },

  // Vim normal mode toggles (space leader)
  {
    "context": "vim_mode == normal && !menu",
    "bindings": {
      "space e": "project_panel::ToggleFocus", // Toggle project panel focus
      "space t": "terminal_panel::ToggleFocus", // Toggle terminal focus
      "space o": "outline_panel::ToggleFocus", // Toggle outline panel
      "space d": "diagnostics::Deploy" // Open diagnostics
    }
  },

  {
    "context": "Editor",
    "bindings": {
      "ctrl-w": "pane::CloseActiveItem"
    }
  },

  {
    "context": "vim_mode == normal",
    "bindings": {
      "space w": "pane::CloseActiveItem",
      "space q": "pane::CloseActiveItem"
    }
  },

  // Terminal-specific toggle
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-`": "workspace::ToggleBottomDock", // Close terminal when focused
      "ctrl-j": "workspace::ToggleBottomDock" // Same, alternate binding
    }
  },

  // Project panel toggle from within panel
  {
    "context": "ProjectPanel",
    "bindings": {
      "ctrl-b": "workspace::ToggleLeftDock",
      "space e": "workspace::ToggleLeftDock"
    }
  },

  // Tasks
  {
    "context": "Workspace",
    "bindings": {
      "alt-g": [
        "task::Spawn",
        { "task_name": "start lazygit", "reveal_target": "center" }
      ]
    }
  }
]
